plugins{
    id 'java'
    id "jp.classmethod.aws.lambda" version "0.38"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->

        if (details.requested.name == 'weld-se-core') {
            details.useTarget "org.jboss.weld.se:weld-se-core:3.0.5.Final"
            details.because "update to latest WELD (not essential but reduces variables)"
        }
    }
}


dependencies {
    compile project(':contracts')    
    compile 'javax.transaction:javax.transaction-api:1.3'
    compile 'com.amazonaws.serverless:aws-serverless-java-container-jersey:1.1.4' 
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.27'            
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compileOnly 'javax.enterprise:cdi-api:2.0'
       
    
    runtime 'org.glassfish.jersey.inject:jersey-cdi2-se:2.27'            
    runtime 'org.jboss:jandex:2.0.5.Final'    
    runtime project(':simpleservice')
    runtime project(':jax-rs')
    runtime 'org.slf4j:slf4j-api:1.7.25'        
    runtime 'org.slf4j:slf4j-nop:1.7.25'          
}

task makeLambdaZip(type:Zip){
    from compileJava
    from processResources
    excludes = ['websocket**']    
    into('lib') {
            from configurations.runtime
    }           
}

build.dependsOn(makeLambdaZip)

import jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask
import jp.classmethod.aws.gradle.lambda.AWSLambdaInvokeTask
import com.amazonaws.services.lambda.model.InvocationType
import jp.classmethod.aws.gradle.lambda.VpcConfigWrapper

task deploy(type: AWSLambdaMigrateFunctionTask, dependsOn: build) {
    functionName = 'SimpleServiceProxiedLambda'
    description = 'Proxied Lambda for a Sample PAR Service'
    handler = 'com.pin.faas.SampleServiceLambdaHandler'    
    role='something'    
    runtime = 'java8'
    timeout = 60
    zipFile = makeLambdaZip.archivePath
    memorySize = 512
    vpc = new VpcConfigWrapper()
    vpc.subnetIds = ["subnet-something", "subnet-xxxx"]  
    vpc.securityGroupIds = ["xxxxx","xxx" ]        
}